services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080"

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
      - "27018:27018"
      - "27019:27019"
    environment:
      MONGO_INITDB_DATABASE: products
    command: ["--replSet", "rs0", "--bind_ip_all"]

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
      ME_CONFIG_BASICAUTH: false

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: productsdb
    ports:
      - "5555:5432"

  # kafka-connect:
  #   image: "confluentinc/cp-kafka-connect:latest"
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
  #     CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
  #     CONNECT_GROUP_ID: "kafka-connect"
  #     CONNECT_CONFIG_STORAGE_TOPIC: "_connect_configs_sink"
  #     CONNECT_OFFSET_STORAGE_TOPIC: "_connect_offsets_sink"
  #     CONNECT_STATUS_STORAGE_TOPIC: "_connect_status_sink"
  #     CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_REST_PORT: 8083
  #     CONNECT_PLUGIN_PATH: "/usr/share/java"
  #     CONNECT_SECURITY_PROTOCOL: "PLAINTEXT"
  #     CONNECT_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #   ports:
  #     - "8083:8083"
  #   depends_on:
  #     - kafka
  #   volumes: # Adding the plugins to Kafka-Connect
  #     - ./kafka-plugins/debezium-connector-mongodb:/usr/share/java/mongo-source
  #     - ./kafka-plugins/confluentinc-kafka-connect-jdbc-10.8.3:/usr/share/java/psql-sink

  # debezium:
  #   image: debezium/connect:2.7.3.Final
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     BOOTSTRAP_SERVERS: kafka:9092
  #     GROUP_ID: 1
  #     CONFIG_STORAGE_TOPIC: debezium_config
  #     OFFSET_STORAGE_TOPIC: debezium_offset
  #     KEY_CONVERTER_SCHEMAS_ENABLE: "false"
  #     VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
  #     CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
  #     CONNECT_PLUGIN_PATH: "/kafka/connect/debezium-connector-mongodb,/kafka/connect/debezium-connector-jdbc"
  #   depends_on:
  #     - kafka
  #     - mongo
  #     - postgres
  #   volumes:
  #     - ./kafka-plugins:/kafka/connect

  connector:
    image: quay.io/debezium/connect
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: _connect_configs
      OFFSET_STORAGE_TOPIC: _connect_offsets
      STATUS_STORAGE_TOPIC: _connect_status
      BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
      - kafka
